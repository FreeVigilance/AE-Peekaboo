"""type_of_event_fk

Revision ID: 3d267f0e2faf
Revises: 9d506f818efe
Create Date: 2025-05-16 13:58:03.641640

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "3d267f0e2faf"
down_revision = "9d506f818efe"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.alter_column('submission_rules', 'type_of_event',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.UUID(),
    #            existing_nullable=True,
    #            postgresql_using=sa.Text('type_of_event::uuid')
    #                 )
    op.drop_column("submission_rules", "type_of_event")
    op.add_column(
        "submission_rules",
        sa.Column(
            "type_of_event", sa.UUID(), autoincrement=False, nullable=True
        ),
    )

    op.create_foreign_key(
        None, "submission_rules", "type_of_event", ["type_of_event"], ["id"]
    )
    op.drop_constraint(
        "type_of_event_inn_id_fkey", "type_of_event", type_="foreignkey"
    )
    op.drop_column("type_of_event", "inn_id")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "type_of_event",
        sa.Column("inn_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.create_foreign_key(
        "type_of_event_inn_id_fkey",
        "type_of_event",
        "submission_rules",
        ["inn_id"],
        ["id"],
    )
    op.drop_constraint(None, "submission_rules", type_="foreignkey")
    op.alter_column(
        "submission_rules",
        "type_of_event",
        existing_type=sa.UUID(),
        type_=sa.VARCHAR(),
        existing_nullable=True,
    )
    # ### end Alembic commands ###
