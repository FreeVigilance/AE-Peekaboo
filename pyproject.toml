[project]
requires-python = ">=3.12"
package-mode = false
name = "Peekaboo"

[tool.poetry]
authors = [""]
description = "Peekaboo backend"
name = "Peekaboo"
readme = "README.md"
version = "0.1.0"

[tool.ruff]
line-length = 100
target-version = 'py312'

[tool.ruff.lint.flake8-quotes]
inline-quotes = 'single'

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = 'single'

[tool.ruff.lint.extend-per-file-ignores]
# Allow to perform function call in argument defaults to inject dependencies
"*/services/*.py" = ["B008"]
"*/routers/*.py" = ["B008"]
"*/dependencies/*.py" = ["B008"]

[tool.ruff.lint.flake8-bugbear]
# Allow default arguments like, e.g., `data: List[str] = fastapi.Query(None)`.
extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.Query",
    "Query",
    "Depends",
]

[tool.ruff.lint]
ignore = [
  "F401",
  "F811",
  "F841",
  "TD",
  "S104",
  "RET503",
  "ISC001"
]
select = [
  'E',
  'F',
  'W',
  'C90',
  'I',
  'N',
  'UP',
  'YTT',
  'S',
  'BLE',
  'B',
  'C4',
  'DTZ',
  'FA',
  'ISC',
  'ICN',
  'G',
  'PIE',
  'T20',
  'PYI',
  'PT',
  'Q',
  'RSE',
  'RET',
  'SIM',
  'TID',
  'TCH',
  'INT',
  'PTH',
  'TD',
  'ERA',
  'PL',
]

[tool.poetry.dependencies]
SQLAlchemy = "2.0.36"
SQLAlchemy-JSONField = "1.0.2"
aioprometheus = "23.12.0"
alembic = "1.14.0"
asyncpg = "0.30.0"
click = "8.1.7"
docutils = ">=0.21,<0.22"
fastapi = "0.115.6"
psycopg2-binary = "2.9.10"
pydantic-settings = "2.6.1"
python = ">3.12.0,<3.13"
sqlalchemy-stubs = " 0.4"
ujson = "5.10.0"
uvicorn = "0.32.1"
uvloop = "0.21.0"
types-ujson = "^5.10.0.20240515"
pyahocorasick = "^2.1.0"
spacy = "^3.8.5"
textdistance = "^4.6.3"

[tool.poetry.group.dev.dependencies]
pytest = "8.3.4"
pytest-asyncio = "0.24.0"
pytest-cov = "6.0.0"
pytest-dotenv = "0.5.2"
pytest-freezegun = "0.4.2"
pytest_mock = "3.14.0"
bandit = "1.8.0"
coverage = "7.6.9"
deepdiff = "8.0.1"
factory-boy = "3.3.1"
isort = "5.13.2"
jsf = "0.11.2"
locust = "^2.15.1"
mypy = "1.13.0"
polyfactory = "2.18.1"
pygit2 = "1.16.0"
pylint = "3.3.2"
ruff = "0.8.2"
scalene = "^1.5.38"
pre-commit = "^4.0.1"


[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = 'auto'
asyncio_default_fixture_loop_scope = "function"
env_files = ['.env', '.env-test']
env_override_existing_values = 1
filterwarnings = ['ignore::DeprecationWarning']
log_format = '{"process":"%(process)d","thread":"%(thread)d","name":"%(name)s","levelname":"%(levelname)s","message":"%(message)s"}'
log_level = 'CRITICAL'
markers = ['slow: marks tests as slow (deselect with -m "not slow")']
python_files = ['tests.py', 'test_*.py', '*_tests.py']


[tool.coverage.run]
branch = true
omit = ['*/site-packages/*', '*/bin/*', 'manage.py', '*/migrations/*']

[tool.coverage.report]
exclude_lines = [
  'pragma: no cover',
  'def __str__',
  'def __repr__',
  'if settings.DEBUG',
  'if TYPE_CHECKING',
]
omit = ['*/migrations/*']